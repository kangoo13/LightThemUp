//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace openomr.omr_engine {
    
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaClassAttribute()]
    public partial class StaveBoundaries : global::java.lang.Object {
        
        internal new static global::java.lang.Class staticClass;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_findGroupsOfNotes0;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_isStaveOnly1;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_findMeasures2;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_findBoundaries3;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n__ctorStaveBoundaries4;
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/awt/image/BufferedImage;Lopenomr/omr_engine/StaveDetection;)V")]
        public StaveBoundaries(global::java.lang.Object par0, global::openomr.omr_engine.StaveDetection par1) : 
                base(((global::net.sf.jni4net.jni.JNIEnv)(null))) {
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 14)){
            @__env.NewObject(global::openomr.omr_engine.StaveBoundaries.staticClass, global::openomr.omr_engine.StaveBoundaries.j4n__ctorStaveBoundaries4, this, global::net.sf.jni4net.utils.Convertor.ParStrongCp2J(par0), global::net.sf.jni4net.utils.Convertor.ParStrongCp2J(par1));
            }
        }
        
        protected StaveBoundaries(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        public static global::java.lang.Class _class {
            get {
                return global::openomr.omr_engine.StaveBoundaries.staticClass;
            }
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::openomr.omr_engine.StaveBoundaries.staticClass = @__class;
            global::openomr.omr_engine.StaveBoundaries.j4n_findGroupsOfNotes0 = @__env.GetMethodID(global::openomr.omr_engine.StaveBoundaries.staticClass, "findGroupsOfNotes", "()V");
            global::openomr.omr_engine.StaveBoundaries.j4n_isStaveOnly1 = @__env.GetMethodID(global::openomr.omr_engine.StaveBoundaries.staticClass, "isStaveOnly", "(Lopenomr/omr_engine/Staves;II)Z");
            global::openomr.omr_engine.StaveBoundaries.j4n_findMeasures2 = @__env.GetMethodID(global::openomr.omr_engine.StaveBoundaries.staticClass, "findMeasures", "()V");
            global::openomr.omr_engine.StaveBoundaries.j4n_findBoundaries3 = @__env.GetMethodID(global::openomr.omr_engine.StaveBoundaries.staticClass, "findBoundaries", "()V");
            global::openomr.omr_engine.StaveBoundaries.j4n__ctorStaveBoundaries4 = @__env.GetMethodID(global::openomr.omr_engine.StaveBoundaries.staticClass, "<init>", "(Ljava/awt/image/BufferedImage;Lopenomr/omr_engine/StaveDetection;)V");
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()V")]
        public virtual void findGroupsOfNotes() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            @__env.CallVoidMethod(this, global::openomr.omr_engine.StaveBoundaries.j4n_findGroupsOfNotes0);
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Lopenomr/omr_engine/Staves;II)Z")]
        public virtual bool isStaveOnly(global::openomr.omr_engine.Staves par0, int par1, int par2) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 16)){
            return ((bool)(@__env.CallBooleanMethod(this, global::openomr.omr_engine.StaveBoundaries.j4n_isStaveOnly1, global::net.sf.jni4net.utils.Convertor.ParStrongCp2J(par0), global::net.sf.jni4net.utils.Convertor.ParPrimC2J(par1), global::net.sf.jni4net.utils.Convertor.ParPrimC2J(par2))));
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()V")]
        public virtual void findMeasures() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            @__env.CallVoidMethod(this, global::openomr.omr_engine.StaveBoundaries.j4n_findMeasures2);
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()V")]
        public virtual void findBoundaries() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            @__env.CallVoidMethod(this, global::openomr.omr_engine.StaveBoundaries.j4n_findBoundaries3);
            }
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::openomr.omr_engine.StaveBoundaries(@__env);
            }
        }
    }
    #endregion
}
